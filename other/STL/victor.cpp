#include <iostream>
#include <vector>

using namespace std;

int main()
{
    vector<int> v1;

    // В моём компиляторе, gcc 9.1.0, capacity выделяется в 2 раза больше чем в прошлый раз.
    for (int i=0; i<100; i++)
    {
        v1.push_back(i+1);
        //cout << "Capacity: " << v1.capacity() << endl;
        //cout << "Size: " << v1.size() << endl;
    }

    v1[97] = 10000; // все ок
    
    /*
    //  Выход за пределы динамического массива. Будет хорошо, если компилятор выдаст 
    //  ошибку, а не изменит данные не из области данных вектора на значение 10000. Чтобы при выходе за границы массива,  
    //  компилятор гарантировано выдавал ошибку, нужно применять at(). В методе имеется проверка выхода за границы.
    //  Иммено из-за этой проверки метод at() работает медленее индексирования
    */
    // v1[200] = 10000; - ошибка, но компилятор может ее проигнорить
    v1.at(98) = 10000;
    // v1.at(10000) = 10000; - 100% ошибка


    cout << "До сжатия: " << std::endl;
    cout << "Capacity: " << v1.capacity() << endl;
    cout << "Size: " << v1.size() << endl;
    
    v1.shrink_to_fit();
    
    cout << "После сжатия: " << std::endl;
    cout << "Capacity: " << v1.capacity() << endl;
    cout << "Size: " << v1.size() << endl;
    


    //for (int i=0; i<v1.size(); i++) cout << v1[i] << std::endl;
}